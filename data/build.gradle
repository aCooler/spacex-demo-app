plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id("com.apollographql.apollo3").version("$apollo_version")
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'kotlin-kapt'
}

android {
    compileSdk 31
    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(path: ':domain')
    implementation "androidx.arch.core:core-testing:$arch"
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-android:$mockito"
    implementation "com.apollographql.apollo3:apollo-rx3-support:$apollo_version"
    implementation("com.apollographql.apollo3:apollo-api:$apollo_version")
    implementation group: 'com.apollographql.apollo3', name: 'apollo-runtime', version: "$apollo_version"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava"
    implementation("com.apollographql.apollo3:apollo-adapters:$apollo_version")
    implementation("com.squareup.retrofit2:retrofit:2.9.0")
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.google.dagger:dagger-android:$dagger"
}
apollo {
    generateTestBuilders.set(true)
    packageName.set("spacexdemoapp")
    generateKotlinModels.set(true)
    schemaFile.set(file("src/main/graphql/com/example/spacexdemoapp/schema.graphqls"))
    customScalarsMapping.set(["Date": "java.util.Date"])
}