plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.apollographql.apollo'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.spacexdemoapp.app"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String",
                "DATE_STRING_FROM",
                "\"yyyy-MM-dd'T'HH:mm:ss\"")
        buildConfigField("String",
                "DATE_STRING_TO",
                "\"MMM dd , yyyy HH:mm a\"")
        buildConfigField("String",
                "SPACEX_ENDPOINT",
                "\"https://api.spacex.land/graphql/\"")

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

detekt {
    buildUponDefaultConfig = true
    ignoreFailures = false
    setSource(files(projectDir))
    baseline = file("$rootDir/app/detekt-baseline.xml")
    config.setFrom(rootProject.file("config/detekt/detekt.yml"))
    reports {
        xml {
            enabled = true
            destination = file("build/reports/detekt/detekt.xml")
        }
        html {
            enabled = true
            destination = file("build/reports/detekt/detekt.html")
        }
    }
}

ktlint {
    version = "0.43.0"
    debug = true
    verbose = true
    outputToConsole = true
    ignoreFailures = true
    enableExperimentalRules = false
    additionalEditorconfigFile = file("/some/additional/.editorconfig")
    kotlinScriptAdditionalPaths {
        include fileTree("scripts/")
    }
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
    }
}

dependencies {
    implementation project(path: ':data')
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    implementation "com.google.dagger:dagger:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger"
    implementation "androidx.fragment:fragment-ktx:$fragment"
    implementation "com.jakewharton.rxbinding4:rxbinding-core:$rxbinding4"
    implementation "com.jakewharton.rxbinding4:rxbinding:$rxbinding4"
    implementation "com.apollographql.apollo:apollo-rx3-support:$apollo_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout"
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "io.reactivex.rxjava3:rxandroid:$rxjava"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava"
    implementation group: 'com.apollographql.apollo', name: 'apollo-runtime', version: "$apollo_version"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.cardview:cardview:$cardview"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso"
    androidTestImplementation("io.mockk:mockk-android:$mockk")
    androidTestImplementation "androidx.test.ext:junit:$junit_android"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    testImplementation("org.mockito:mockito-core:$mockito")
    testImplementation "junit:junit:$junit"
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "androidx.test:core:$core"
    testImplementation "org.mockito:mockito-android:$mockito"
    debugImplementation("androidx.fragment:fragment-testing:$fragment")
    implementation "androidx.arch.core:core-testing:$arch"
    androidTestImplementation("androidx.test:rules:$test")
}
