plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.apollographql.apollo'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jlleitschuh.gradle.ktlint'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.spacexdemoapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String",
                "DATE_STRING_FROM",
                "\"yyyy-MM-dd'T'HH:mm:ss\"")
        buildConfigField("String",
                "DATE_STRING_TO",
                "\"MMM dd , yyyy HH:mm a\"");
        buildConfigField("String",
                "SPACEX_ENDPOINT",
                "\"https://api.spacex.land/graphql/\"")

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

detekt {
    buildUponDefaultConfig = true
    ignoreFailures = false
    setSource(files(projectDir))
    baseline = file("$rootDir/app/detekt-baseline.xml")
    config.setFrom(rootProject.file("config/detekt/detekt.yml"))
    reports {
        xml {
            enabled = true
            destination = file("build/reports/detekt/detekt.xml")
        }
        html {
            enabled = true
            destination = file("build/reports/detekt/detekt.html")
        }
    }
}

ktlint {
    version = "0.43.0"
    debug = true
    verbose = true
    outputToConsole = true
    ignoreFailures = true
    enableExperimentalRules = false
    additionalEditorconfigFile = file("/some/additional/.editorconfig")
    kotlinScriptAdditionalPaths {
        include fileTree("scripts/")
    }
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
    }
}

dependencies {
    implementation "androidx.fragment:fragment-ktx:1.4.0"
    implementation 'com.jakewharton.rxbinding4:rxbinding-core:4.0.0'
    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
    implementation 'com.apollographql.apollo:apollo-rx3-support:2.5.11'
    implementation 'com.google.dagger:dagger:2.40.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.40.1'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.40.1'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation group: 'com.apollographql.apollo', name: 'apollo-runtime', version: '2.5.11'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'org.mockito:mockito-core:4.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // AndroidX Test - JVM testing
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.test:core-ktx:1.3.0"
    testImplementation "org.robolectric:robolectric:4.5.1"

}

